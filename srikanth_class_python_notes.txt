-- Start 20 May
sorted gives the value map object gives the object 
--map gives only the map object(object address) and not the actual value
the way to extract values is as blow
numbers = map(extract_number,codes) -- map_demo.py

example where the map can be used is -- convert a list to integers before adding
data = ["45,56,55,89","22,22,33,44","81,68,80,75]]

marks = map(int,m.split(","))
print(sum(marks))

-- ass 1 -- even numbers by 10 and odd numbers by 5 -- and sort them
-- ass2 - Sort a set of names by length after stripiing spaces. 



--ass 3 
fix the problem to error
data = ["45,56,,89","89,66,88,75","81,68,80,75"]

for m in data:
   marks = map(int, m.split(","))
   
   print(sum(marks))
 
map is going to convert each and every value to some thing and it has to be specified
-- ass4 -- use map to extract all alphabets from each string in a list. Use map and a function
e.g
['Ab12c','x12y2']
result should be 
'Afc'
xyz
--- map, filter and sorted functions

-- Sort dictionary by value -- how

d = {1:10,3:5, 2:30, 4:15}
--below is sorting on keys
for k, v in sorted(d.items()); -- items is giving a list of tuples -- considers first element of tuple which is the key
    print(k,v)
-- below is sorting a dictionary by values

def get_value(t):
    return t[1] --- returns the second value of the tuple -- t[0] returns key
for k,v in sorted(d.items(), key = get_value):
  print(k,v)


Lambda expression

-- end 20 May

-- Start 19 May
How to pass functions as parameters. 
Only functions that return a boolean can be used in this cases 

Python does not support overloading functions. -- Java, C, C++ , c# support over loading

You cannot create 2 functions with same name.
#Example
def add(a,b):
    retunr a + b
    
def add(a,b,c):
  return a + b + c
  
The above gives an error. The reason is that the second assignment 

add
overloading.py for example

Python is not a great oop (object oriented programming). Best programming lang for foundation oop is Java.
A function can be called only after creation. and not before. 


--- Passing function as a parameter
def iseven(n):
    return n % 2 == 0
def number_type(num, func):
  if func(num):
      print("Yes")
  else:
      print("No")
number_type(10, iseven) # remember dont put ()

def ispalindrome(n):
   return str(n) == str(n)[::-1

def number_type(num, func):
   if func(num):
      print("Yes")
   else:
      print("No")
number(10, ispalindrome)


filter

--Ass1
select prime numbers from a list of numbers using filter

-- Ass2
select strings that contain a special character using filter -- c# from ['Python','java','c#']

-- Ass3
select strings that contain more than 2 upper case letters.

-- End 19 May

--Start 18th May
Variable arguments means , multiple values can be passed. After *messages -- the rest of the parametera are kw(keyword) only parameters
e.g
def wish(*names, message = 'Hi'):
    pass;
wish("Scott,"Mark","Larry",message="Hello") -- data type for *names will be tuple -- it is heterogenous. 
print() -- has varying arguments, and keyword only parameters.
Exploring the libraty and what features of the language are supported is important.
Only one multiple variable is possible in the arguments. Not multi. 

def f1(p1, *values, p2):
  pass:
def f1(10,20, p2 =1 )
*names is available in other languages such as Java, C

---Keyword only parameters
Parameters to be passed always using a keyword. No positional parameters.
def wish(*,name,message): -- The * at the beginning indicates kw(keyword) only parameters
1 advantage is it allows the creator to change the parameters order without impacting the users
Disadvantage is parameter names and positions cannot be changed

--Position only parameters/arguments -- Recent feature -- added in 3.8
def wish(msg,name, /):
  print(msg,name)
  
wish("Hello","Mark") 
wish(name="Bill", msg="Hi") will throw an error
gives flexibility to change the names of the variables by retaining the positions

Functions are typically expected to return a value

def factorial(n):
  pass
 
 def iseven(n):
     return n % 2 == 0  # -- returns True or False
   
During run time When ever the function encounters the word return, the value will be returned and the function will be terminated.

def isprime(n)
  for in range(2,n//2 + 1):
      if n % 1 == 0:
         return False
  return True


-- Ass 1
Create a function that takes a string and returns the number of uppercase letters the string has.
-- Ass 2
Create a function that takes a number and returns True if it is a palindrome.
-- Ass 3
Create a function that takes a string and returns all digits of the string as another string -- getdigits("Ab12Y2B") should return '122' as a string
-- Ass 4
Create a function that takes a number and an optional parameter - returns the smallest and largest fators of a number. -- factors(50) should return 2 and 25 -- requires to be returned as collection because you cant return multiple values. facotrs(13) should return None, Nome or [1,13' or give the function an option  e.g. factors(13,returnNone=True)

Look at inbuilt function sorted

Look at zip() also -- for position only parameters

---kw_arguments example
def display(**kwargs):
  for k,v in kwargs.items():
     print(k,v)
  -- In the above case , (**kwargs) -- is a dictionary
 display(a=10, b=20, name = 'Point") --
 display(r=10, x=10, y = 20) --
 
 def show(*args, **kwargs
 show(10,20,name="Point")
 
-- End 18th May

-- Start 19th May
How to pass a function as a parameter to another function.

-- End 19th May
--11-May
In python
for can have else.
When break is not provided and range gets exhausted, the else statement will get executed.
if break gets executed else does not.

for n in range(2, num // 2 +1):
  if num

While can also have an else: construct.
It is not available in other languages 

page 32 of material

assignment 1
take numbers infinitely until user enters 0 and print the average
donttake negative numbers.
if user enters negative number, ignore and move to the next
continue can help

assignment 2
accept 2 numbers and display common factors between them. ignore 1 and itself

test input 10, 20
2 and 5 only because 10 we dont consider

--assignment 3
accept 3 numbers and display the largest of 3 numbers
-- assignment 4
accept the kind of object 1 for circle, 2 for rectangle, 3 for square
and then take necessary input to calculate area of the object. 

codecheck.io has interesting
test banks for java, python, c++
check assignments


-- Data Structures
a) string
s = "Python"
s[0] will give 'P'
s[5] will give 'n'
we dont have array concept in python. Closest is list

s[-1] will give n in the word Python

it is called negative indexing. 
s[-3] 3rd character from the end
strings in python are immutable. Means u cannot modify strings
s[0] = 'p'
-- 11 May end
--Start 12-May
String structures
s = 'Python'

s[:-3] means -- going upto -3
s[:3] will give first 3 characters
hty
s[-3::-1] -- htyP
slicing works on other data structures also
String is like a collection and hence  iterable
for c in s:
print(c)

Ass1
Accept a string from user and check whether it is valid product code? Valid product code is made of 2 alphabets followed by 4 digits.
Ass2
Accept main string and substring and display where the substring is present in main string? All positions where it is present
Ass3
Accept a string and display how many upper case letters the string has.

s.count('do') will count the occurances of the substring in it
s.index('do') will give position of he first occurance of the string
s.find('did') will return -1 if the string is not found else the position. 
but if we write s.index('did) it raises error if the string is not found
s.strip() will remove leading and trailing spaces

Page 40
list is a data structure
A list is a collection of values. Can use slicing and indexing
list is iterable like string
List is mutable
string is not mutable
l.insert(0,5) will insert 5 at 1st position
List can be heterogeneous
l = [1,'abc',True,10.2]
len(l) will giv u number of items
l.remove(3) will remove 3rd element in the list
names = [] -- empty list
names.append('Python')
'Java' in names -- will return True if Java exists in names

Ass 4
Accept numbers until user enters 0 and display numbers in sorted order. Clue -- use list.sort()

pop always returns the last value of the item. pop removes the item from the end l.pop(i)
-- End 12 May

--Start May 13
tuples
List comprehension
Assignment 1


aCCEPT NUMBERS UNTIL 0 IS GIVEN AND DISPLAY ALL EVEN NUMBERS IN SORTED ORDER FOLLOWED BY ODD NUMBERS IN SORTED ORDER

Assignment 2

Accept a string which contains a list of numbers separted by comma and display the average of the numbers.
75,80, 30, 78


Nested lists
Nested lists
n1[1][1]
students =

Assignment 3 
Understand the difference between append ane extend

Tuple is not a list. It is a collection. But importantly it is ummutable
t = (1,2,3)
type(t)
Remember parantheses are used in lists
t = () -- empty tuple
t = (1) is not a tuple with 1 element in it
t = (1,) -- tuple of 1 value
unpacking

t= (10,20)
a,b = t
print(a,b)
10,20
a,b = [1,2]
a,b = "ab" -- is also an example of ab

pyhon tricks book -- same author website
realppython.com -- real python tutorial
look at quizzes

enumerate function gives both element and index. Gives 2 values as 1 object/unit
For that we need to use Tuple


--End May 13

-- Start May 14
sets - no subscript, no  slicing
sets contain only unique values
s = {1,5,7} 
when printing back , order is not guaranteed
pop i supposed to give value from top but in set it gives arbitrary value
pop gives value and removes it
s1 carat symbol exclusive or 

sets - ass1
Accept a string and display how many times each character is occuring

sets - ass2
accept a string and display how many times each word is occuring -- words are assumed by a space
put words in sorted order

-- ass 3
accept 2 strings and display the characters of the first string that are present in the second string. Maintain order of characters in the first string. Order of characters should not be changed in first string


dictionary is a collection of keys and values
in Java -- it is called a Map
d = {1:10, 2:30, 3:25}
d[1]
d[4] gives error
new key d[4] = 40
possible to modify value for existing key

d.items() gives tuples

-- Ass4
Accept name and phone number until END is given and display names and phone numnbers in the ascending order of the names

------Start 15 May
Continue on sets and dictionary

-- Assignment 5
Enhance program to support multi phone numbers for the same customer. if the same phone number is original, ignore that.

-- Beyond Basics in git hub. Search for it for unit test in srikanth/prgagad

Dictionary Comprehension -- page 52

-----Start 17-May
Functions -- takes input in the form of parameters or arguments. They could be optional. And returns value. Which is optional again. When function does not return any value it is called returns, null.
2 Assignments
No specific naming conventions required for function names unlike in other languages like c# . In c# fpr e.g - camel case - PrintTable and in java it is it is pascal case.
If a parameter has a default value assigned, it is called a default parameter -- c and java dont support default parameters

# 1) Create a function that takes a number and displays its factors
# 2) Create a function called print_table which takes the number and length and prints a table for the numbers

# 1) Create a function that takes a number and displays its factors
def display_factors(number):
    factors = [x for x in range(1,(number//2)+1) if number%x == 0]
    print(factors)
display_factors(20)

# Create a function called print_table which takes the number and length and prints a table for the number

def print_table(number,length):
    for i in range(1,length+1):
        print(f"{number} X {i} = {i*number}")

print_table(26,20)
----End 17- May
