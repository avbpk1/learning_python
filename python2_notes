-- Start 19 Jun
85.png, 86.png
pass_parameters.py

passing parameters by reference -- address and not value
if an immutable object is passed, like for e.g. integer -- it does not change the value, instead creaetes a new address for it


If a mutable object is passed -- for e.g. list -- 87.png, 88.png

l = [1,2,3]
def addfirst(lst,value):
   
Everything is passed by reference i.e. address not by value

formal parameter changing by actual parameter will depend on whether the object is mutable or immutable

Assignment 1
Create a function that takes a list and a value to delete and delete all the occurances of that value from that list
lst = [10,20,30,20,50]
delete(lst,20) -- should remove 20 from the list

Assignment 2
Create a function that takes a list and interchanges first 3 values with last 3 values
[1,2,3,4,5,6,7] should result in [7,6,5,4,3,2,1] -- 7 and 1 are interchanged, 6 and 2 are interchanged and 5 and 3 in this example

Assignment 3
Create a function that 


list_products.py -- 

---Local Functions is a function that is inside another functuon -- 89.png

g = 100 # these are global variables and can be accessed from all functions
def f1():
    ev = 10 # this is called enclosing variable and can be accessed from inside the local function.
    #Local function or nested function
    def f2():
        nonlocal ev # if this nonlocal keyword is specified, you are saying you want to make use of ev from the parent function. 
        global g -- similarly global is a keyword
        ev = 0
        lv = 100
        print(lv,ev)

when you create an enclosing variable in a local function  -- 90.png, 91.png
nonlocal ev -- nonlocal is a key word to indicate to use envlosing variable 

order of creation
is there a local variable, if not then enclosing variable, if no enclosing, then it will check global variable, if it is not global, then it will look into built in variable

--Next Topic is 
-- End 19 Jun

-- Start 18 Jun
Remember -- when a function does not have explicit Return for False conditions - it will return None which is equivalent to False

Sorted function -- very powerful along side, filter, map and sorted

80.png

nums = [-10,10,45,-6,7]
for n in sorted(nums, key = abs):
prnt n;

-- Assignment
1) Assume a list of strings which may contain numbers and non numbers and display sum of the numbers. -- clue -- use filter and pick up numbers and sum them.
2) Assume a list of values where you have the product name and price separated by comma (81.png) and display these strings in the descending order of price. Remember name need not be a singgle char. ASsume price is integer
3) Assume a list of marks in the form of strings ["30,35,45","55,60,60","-,-"] etc. Total the marks and return each i.e.
110
175
...
4)  Find out whether we are passing the address of the value or the value in case of pythong -- 82.png.

In Java -- for standard parameters it is pass by value. For object -- it is pass by reference


lambda functions



--Start 17-Jun
Functions as parameters
function_as_params.py -- look at 74.png

3 Standard Functions where functions are used as paramerers -- very important -- filter_demo.py
Fiter -- function that takes a value and returns boolean 

Note string is an iterable i.e. each character in string is an element.


for n in filter(ispositve, nums)

filter2_demo

Assignment 1
Use Filter to select all the strings that contain a space. Take a set of strings and display the string if it contains one or more spaces.
Assignment2
Use filter to select all prime numbers from the given list of numbers. -- remember the first argument fn should return a boolean
Assignment 3
USe filter to select valid product codes. [cod1, code2, code3] -- first letter is an alpabet , second is a number., third is a alphabet. IF first and last letter are alphabets, then valid produt code

Assignment 4 --
v1
Use map to convert a set of strings that contaitn digits to floats and then calculate the total
['123','456','789'] should return 123 + 456 + 789
v2
If some of them are not convertible -- treat them as 0


map means mapping

map function

map_demo.py

map is an extremely power fnction -- 75.png
map(func,iterable) unlike filter which expects func to return a boolean -- it returns another value
It does not give a list. it will give one value at a time and is called a lazy function. So, where map is used, it has to be used in a loop to get all values out.
It does not eagerly do it. IT does lazily

If you try to assign a map output
lengths = map(len,names)
print(lenghts) will return  
<map object at 0x00sdfsdf>

--End 17-Jun

Start 16-Jun
*args, **kwargs -- this combination will help in taking many poistional parameters and also many key word parameters

In python -- functions are treated as object unlike other languages such as java which has overloading functionality
-- discussion was around functions as parameters
-- 54.png,55.png, 56.png, 58.png, 59.png,60.png  -- showing that int and function are both objects in python
--61.png -- 62.png -- function as object.py

There is no overloading concept in python. It is completey overriding.

--look at 64.png for more clarity

Jun 16 -- Assignments
1) create a function that takes a collection/list of numbers and returns variance of the list. -- Ask google what variance means
2) Create a function that takes a string and returns number of uppercase letters and lowercase letters. Should return 2 values -- find out best way to return 2 values. --Tip -- use tuple to return 2 values i.e. return(cnt1,cnt2)


End 16 Jun
